
@{
    ViewData["Title"] = "Deposit";
}


<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .add-balance-container {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        width: 300px;
        text-align: center;
    }

        .add-balance-container h2 {
            margin-bottom: 20px;
            color: #333;
        }

    .add-balance-form {
        display: flex;
        flex-direction: column;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #666;
        }

        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

    .add-balance-btn {
        background-color: #2ecc71;
        color: #fff;
        padding: 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .add-balance-btn:hover {
            background-color: #27ae60;
        }

    .current-balance {
        margin-top: 20px;
        font-size: 18px;
    }
</style>

<div class="add-balance-container">
    <h2>Add Balance</h2>
    <div class="current-balance" id="currentBalance"></div>
    <form class="add-balance-form" id="addBalanceForm">
        <div class="form-group">
            <label for="amount">Amount to Add:</label>
            <input type="number" id="amount" name="amount" required>
        </div>
        <button type="button" class="add-balance-btn" onclick="addBalance()">Add Balance</button>
    </form>
</div>


<script>
    // Retrieve user email from session cookie
    var userEmail = getCookie('user_email');
    var userPassword = getCookie('user_password');

    // Make a request to get user information including balance
    fetch('http://localhost:9001/get/user?email=' + userEmail + '&password=' + userPassword)
        .then(response => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error('Failed to fetch user information.');
            }
        })
        .then(user => {
            displayCurrentBalance(user.balance);
        })
        .catch(error => {
            console.error('Error:', error.message);
        });

    function displayCurrentBalance(balance) {
        // Display the user's current balance on the "Add Balance" page
        document.getElementById('currentBalance').innerText = 'Current Balance: $' + balance.toFixed(2);
    }

    function addBalance() {
        var amount = parseFloat(document.getElementById('amount').value);

        // Check if the amount is a valid number
        if (isNaN(amount)) {
            alert('Please enter a valid number.');
            return;
        }

        // Make a request to change the user's balance
        fetch('http://localhost:9001/post/change-balance?email=' + userEmail + '&amount=' + amount, {
            method: 'POST'
        })
            .then(response => {
                if (response.ok) {
                    alert('Balance added successfully!');
                    // Refresh the page to update the displayed balance
                    window.location.reload();
                } else {
                    throw new Error('Failed to add balance.');
                }
            })
            .catch(error => {
                console.error('Error:', error.message);
                alert('Failed to add balance. Please try again.');
            });
    }

    // Function to retrieve a cookie value by name
    function getCookie(name) {
        var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        if (match) return match[2];
    }
</script>